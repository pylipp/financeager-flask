[metadata]
name = financeager-flask
description = Plugin to use flask as backend for financeager
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/pylipp/financeager-flask
author = Philipp Metzner
author_email = beth.aleph@yahoo.de
license = GPLv3
keywords = commandline finances
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Console
    Intended Audience :: End Users/Desktop
    Intended Audience :: Other Audience
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: Unix
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Office/Business :: Financial
    Topic :: Database
    Topic :: Utilities

[options]
install_requires =
    financeager>=1.0.0,<2
    Flask>=1.0.2
    Flask-RESTful>=0.3.5
    requests>=2.20.0
    importlib-metadata>=1.7.0;python_version<"3.8"
packages = find:

[options.packages.find]
exclude = test

[options.entry_points]
financeager.services =
    flask = financeager_flask.main:main

[options.extras_require]
packaging =
    build
    twine>=1.11.0
develop =
    coverage>=4.4.2
    pre-commit<2.0.0
    gitlint>=0.15.0

[coverage:run]
branch = true
source = financeager_flask

[coverage:report]
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:
    except Exception:
    def main()

[isort]
known_third_party =financeager,flask,flask_restful,flipflop,requests,setuptools

[flake8]
max-line-length = 80
ignore = E731,  # do not assign a lambda expression, use a def
         W504,  # line break after binary operator

[yapf]
# The column limit.
column_limit=80

# Set to True to prefer splitting before 'and' or 'or' rather than
# after.
split_before_logical_operator=False

space_between_ending_comma_and_closing_bracket=False
